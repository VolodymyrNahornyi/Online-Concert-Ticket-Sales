// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace OnlineConcertTicketSales.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20210702171940_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Concerts.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cea51056-4180-45e6-9007-b92b2c4e806a"),
                            ArtistName = "The Beatles",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("7ecf51f4-d7a1-4446-a394-9685445c548d"),
                            ArtistName = "The Rolling Stones",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("f32cba10-8b39-430b-904e-1013ce10bd7e"),
                            ArtistName = "Queen",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("772a66e2-1758-429a-bf2a-fa879c0a814b"),
                            ArtistName = "AC/DC",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("fba81401-9ecb-4b88-bc76-f94a8cf2febf"),
                            ArtistName = "Pink Floyd",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("d50c5b99-49f3-49ff-89f3-3e4c6903209e"),
                            ArtistName = "Led Zeppelin",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("e53ee28f-fc14-4c08-919b-bdeb0f61f865"),
                            ArtistName = "Guns N' Roses",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("16782e08-7f54-41fa-b3ae-1adc34aa3edd"),
                            ArtistName = "Fleetwood Mac",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("bdf2bba3-a4a9-406f-a4b2-231bd2d3ee5f"),
                            ArtistName = "Creedence Clearwater Revival",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("d604fae1-6a79-463d-956c-09fcfb59a769"),
                            ArtistName = "Journey",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("296f7e3a-203e-4617-9c34-71f12bdb467e"),
                            ArtistName = "Lynyrd Skynyrd",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("9b9e2426-46d0-44a5-9e71-fb73fecad422"),
                            ArtistName = "U2",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("0f3e2eba-8226-4a9c-88e3-ddda16ee5f0d"),
                            ArtistName = "Aerosmith",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("d4c23fa3-292b-4faa-8fc0-21458aebfd17"),
                            ArtistName = "Eagles",
                            GenreId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("e8af3832-2e4f-489f-b282-94751285f4d4"),
                            ArtistName = "Miles Davis",
                            GenreId = new Guid("6d3dbb7d-6297-4839-aaa5-650760356875")
                        },
                        new
                        {
                            Id = new Guid("c1da350a-166a-490f-8430-d1fab16b24e7"),
                            ArtistName = "Louis Armstrong",
                            GenreId = new Guid("6d3dbb7d-6297-4839-aaa5-650760356875")
                        },
                        new
                        {
                            Id = new Guid("f545753e-b49f-45b9-91ee-de477d559365"),
                            ArtistName = "John Coltrane",
                            GenreId = new Guid("6d3dbb7d-6297-4839-aaa5-650760356875")
                        },
                        new
                        {
                            Id = new Guid("6a68cdd0-30c1-4b8c-9d3c-278c56bc7447"),
                            ArtistName = "Luke Combs",
                            GenreId = new Guid("4a4395c0-b3ce-4d32-916f-30200e9c7903")
                        },
                        new
                        {
                            Id = new Guid("1cf59f25-ea0f-46e1-9386-76d684e851ba"),
                            ArtistName = "Morgan Wallen",
                            GenreId = new Guid("4a4395c0-b3ce-4d32-916f-30200e9c7903")
                        },
                        new
                        {
                            Id = new Guid("bf0d8839-8205-4b38-ba5e-fe485409f423"),
                            ArtistName = "Kane Brown",
                            GenreId = new Guid("4a4395c0-b3ce-4d32-916f-30200e9c7903")
                        });
                });

            modelBuilder.Entity("Entities.Models.Concerts.Concert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConcertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcertName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Concerts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9637b59a-65e6-4049-8ace-5dfc70a79593"),
                            ArtistId = new Guid("cea51056-4180-45e6-9007-b92b2c4e806a"),
                            ConcertName = "The Beatles at Apple Corps Rooftop",
                            Date = new DateTime(2021, 2, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3075)
                        },
                        new
                        {
                            Id = new Guid("9f0b0daf-70aa-4a9e-bd89-70adf5351655"),
                            ArtistId = new Guid("cea51056-4180-45e6-9007-b92b2c4e806a"),
                            ConcertName = "The Beatles at Twickenham Studios",
                            Date = new DateTime(2021, 3, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3353)
                        },
                        new
                        {
                            Id = new Guid("ccc3968c-5418-4df6-a8cb-eedb803f9ab3"),
                            ArtistId = new Guid("cea51056-4180-45e6-9007-b92b2c4e806a"),
                            ConcertName = "The Beatles at EMI Recording Studios",
                            Date = new DateTime(2021, 4, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3365)
                        },
                        new
                        {
                            Id = new Guid("c9fdbce2-b8f4-4d9e-a319-c805590beebc"),
                            ArtistId = new Guid("cea51056-4180-45e6-9007-b92b2c4e806a"),
                            ConcertName = "The Beatles at Candlestick Park",
                            Date = new DateTime(2021, 6, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3370)
                        },
                        new
                        {
                            Id = new Guid("b2415bc2-1137-4a79-80ac-ad1be8721e42"),
                            ArtistId = new Guid("cea51056-4180-45e6-9007-b92b2c4e806a"),
                            ConcertName = "The Beatles at Seattle Center Coliseum",
                            Date = new DateTime(2021, 8, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3374)
                        },
                        new
                        {
                            Id = new Guid("6a972a13-c1dc-4322-894e-e6103bbdc620"),
                            ArtistId = new Guid("cea51056-4180-45e6-9007-b92b2c4e806a"),
                            ConcertName = "The Beatles at Shea Stadium",
                            Date = new DateTime(2021, 9, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3379)
                        },
                        new
                        {
                            Id = new Guid("ec19f4c0-5682-4941-8eb4-71475744610c"),
                            ArtistId = new Guid("f32cba10-8b39-430b-904e-1013ce10bd7e"),
                            ConcertName = "Early shows",
                            Date = new DateTime(2021, 4, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3384)
                        },
                        new
                        {
                            Id = new Guid("73ae9a23-7f86-4088-b37c-1b6f569edce2"),
                            ArtistId = new Guid("f32cba10-8b39-430b-904e-1013ce10bd7e"),
                            ConcertName = "Queen I",
                            Date = new DateTime(2021, 5, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3389)
                        },
                        new
                        {
                            Id = new Guid("3e55eb93-e228-4d90-87ad-3341b15760c9"),
                            ArtistId = new Guid("f32cba10-8b39-430b-904e-1013ce10bd7e"),
                            ConcertName = "Queen II",
                            Date = new DateTime(2021, 6, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3393)
                        },
                        new
                        {
                            Id = new Guid("d8ef04df-052b-417e-8812-3f45986c9c14"),
                            ArtistId = new Guid("f32cba10-8b39-430b-904e-1013ce10bd7e"),
                            ConcertName = "Sheer Heart Attack",
                            Date = new DateTime(2021, 7, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3398)
                        },
                        new
                        {
                            Id = new Guid("9abedbd5-7407-46fd-a09e-070353a576a3"),
                            ArtistId = new Guid("f32cba10-8b39-430b-904e-1013ce10bd7e"),
                            ConcertName = "A Night At The Opera",
                            Date = new DateTime(2021, 8, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3403)
                        },
                        new
                        {
                            Id = new Guid("ba4345df-2828-4f1e-b040-380ee65bdc54"),
                            ArtistId = new Guid("f32cba10-8b39-430b-904e-1013ce10bd7e"),
                            ConcertName = "Day At The Races",
                            Date = new DateTime(2021, 9, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3407)
                        },
                        new
                        {
                            Id = new Guid("ed232607-0b60-42e5-b7fc-a4ceb2502a16"),
                            ArtistId = new Guid("f32cba10-8b39-430b-904e-1013ce10bd7e"),
                            ConcertName = "News Of The World",
                            Date = new DateTime(2021, 10, 2, 20, 19, 40, 456, DateTimeKind.Local).AddTicks(3412)
                        });
                });

            modelBuilder.Entity("Entities.Models.Concerts.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GenreName")
                        .HasColumnType("int")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            GenreName = 9
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            GenreName = 1
                        },
                        new
                        {
                            Id = new Guid("4a4395c0-b3ce-4d32-916f-30200e9c7903"),
                            GenreName = 0
                        },
                        new
                        {
                            Id = new Guid("2deefc3e-f1a9-4e70-9ebb-85fb2d3a9bef"),
                            GenreName = 2
                        },
                        new
                        {
                            Id = new Guid("6d3dbb7d-6297-4839-aaa5-650760356875"),
                            GenreName = 4
                        },
                        new
                        {
                            Id = new Guid("286d0569-5f6e-44c9-939f-aa0165353694"),
                            GenreName = 5
                        },
                        new
                        {
                            Id = new Guid("e04ba65d-1c39-4895-9c9a-a5ddee3e014a"),
                            GenreName = 11
                        });
                });

            modelBuilder.Entity("Entities.Models.Concerts.Artist", b =>
                {
                    b.HasOne("Entities.Models.Concerts.Genre", "Genre")
                        .WithMany("Artists")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Models.Concerts.Concert", b =>
                {
                    b.HasOne("Entities.Models.Concerts.Artist", "Artist")
                        .WithMany("Concerts")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
